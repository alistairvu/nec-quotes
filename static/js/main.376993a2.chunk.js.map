{"version":3,"sources":["useQuote.js","QuoteDisplay.js","App.js","index.js"],"names":["useQuotes","click","useState","quote","setQuote","author","setAuthor","isLoaded","setIsLoaded","getQuote","a","fetch","res","json","data","length","randQuote","Math","floor","random","text","useEffect","QuoteDisplay","onClick","className","App","setClick","useQuote","prev","rootElement","document","querySelector","ReactDOM","render"],"mappings":"2MA6BeA,EAzBG,SAACC,GAAW,IAAD,EACDC,mBAAS,IADR,mBACpBC,EADoB,KACbC,EADa,OAECF,mBAAS,IAFV,mBAEpBG,EAFoB,KAEZC,EAFY,OAGKJ,oBAAS,GAHd,mBAGpBK,EAHoB,KAGVC,EAHU,KAKrBC,EAAQ,uCAAG,kCAAAC,EAAA,sEACGC,MARV,+BAOO,cACTC,EADS,gBAEIA,EAAIC,OAFR,OAETC,EAFS,OAITC,EAASD,EAAKC,OACdC,EAAYF,EAAKG,KAAKC,MAAMD,KAAKE,SAAWJ,IAElDX,EAASY,EAAUI,MACnBd,EAAUU,EAAUX,QACpBG,GAAY,GATG,4CAAH,qDAiBd,OALAa,qBAAU,WACRb,GAAY,GACZC,MACC,CAACR,IAEG,CAACE,EAAOE,EAAQE,ICZVe,EAZM,SAAC,GAAgC,IAA9BnB,EAA6B,EAA7BA,MAAOE,EAAsB,EAAtBA,OAAQkB,EAAc,EAAdA,QACrC,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAGA,UAAU,QAAb,cAAuBrB,EAAvB,OACA,mBAAGqB,UAAU,SAAb,SAAkC,OAAXnB,GAAmBA,IAC1C,wBAAQkB,QAASA,EAASC,UAAU,YAApC,mCCcSC,EAjBH,WAAO,IAAD,EACUvB,mBAAS,GADnB,mBACTD,EADS,KACFyB,EADE,OAEkBC,EAAS1B,GAF3B,mBAETE,EAFS,KAEFE,EAFE,KAIhB,OAJgB,KAMZ,cAAC,EAAD,CACEF,MAAOA,EACPE,OAAQA,EACRkB,QAAS,kBAAMG,GAAS,SAACE,GAAD,OAAUA,EAAO,QAItC,mBAAGJ,UAAU,UAAb,yBCZLK,G,MAAcC,SAASC,cAAc,UAC3CC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.376993a2.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\n\nconst url = \"https://type.fit/api/quotes\"\n\nconst useQuotes = (click) => {\n  const [quote, setQuote] = useState(\"\")\n  const [author, setAuthor] = useState(\"\")\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  const getQuote = async () => {\n    const res = await fetch(url)\n    const data = await res.json()\n\n    const length = data.length\n    const randQuote = data[Math.floor(Math.random() * length)]\n\n    setQuote(randQuote.text)\n    setAuthor(randQuote.author)\n    setIsLoaded(true)\n  }\n\n  useEffect(() => {\n    setIsLoaded(false)\n    getQuote()\n  }, [click])\n\n  return [quote, author, isLoaded]\n}\n\nexport default useQuotes\n","import React from \"react\"\n\nconst QuoteDisplay = ({ quote, author, onClick }) => {\n  return (\n    <div className=\"container\">\n      <p className=\"quote\">\"{quote}\"</p>\n      <p className=\"author\">{author !== null && author}</p>\n      <button onClick={onClick} className=\"quote-btn\">\n        Get another quote\n      </button>\n    </div>\n  )\n}\n\nexport default QuoteDisplay\n","import React, { useState } from \"react\"\nimport useQuote from \"./useQuote\"\nimport QuoteDisplay from \"./QuoteDisplay\"\n\nconst App = () => {\n  const [click, setClick] = useState(0)\n  const [quote, author, isLoaded] = useQuote(click)\n\n  if (isLoaded) {\n    return (\n      <QuoteDisplay\n        quote={quote}\n        author={author}\n        onClick={() => setClick((prev) => prev + 1)}\n      />\n    )\n  } else {\n    return <p className=\"loading\">Loading...</p>\n  }\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./styles.css\"\n\nconst rootElement = document.querySelector(\"#root\")\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}